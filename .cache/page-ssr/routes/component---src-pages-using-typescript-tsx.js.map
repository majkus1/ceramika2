{"version":3,"file":"component---src-pages-using-typescript-tsx.js","mappings":";;;;;;;;;;;;;;;;;AAAA;AAaA,KAAMI,gBAA+C,CAAG,CAAC,CACvDC,IAAI,CACJC,QACF,CAAC,gBACCN,gDAAAA,CAACE,mEAAM,mBACLF,gDAAAA,WAAI,kBACc,wEAAG,uBAAqB,CAAI,CACzC,cACLA,gDAAAA,UAAG,2CACwC,2EAAM,UAAQ,CAAO,0CAClC,2EAAM,UAAQ,CAAO,qCACzC,2EAAM,kBAAgB,CAAO,KACvC,CAAI,cACJA,gDAAAA,UAAG,2CACwC,2EAAM,YAAU,CAAO,oBACxD,2EAAM,YAAU,CAAO,gBAAa,2EAAM,UAAQ,CAAO,SACnE,CAAI,cACJA,gDAAAA,UAAG,+BAC4B,2EAAOM,QAAQ,CAACC,QAAQ,CAAQ,uBACpD,CAACF,IAAI,CAACG,IAAI,CAACC,SAAS,CAAC,GAChC,CAAI,cACJT,gDAAAA,UAAG,iCAC8B,CAAC,GAAG,cACnCA,gDAAAA,MAAGU,IAAI,CAAC,uEAAuE,EAAC,gCAEhF,CAAI,IAEN,CAAI,cACJV,gDAAAA,CAACC,wCAAI,EAACU,EAAE,CAAC,GAAG,EAAC,yBAAuB,CAAO,CAE9C,CAEM,KAAMC,KAAuB,CAAG,iBAAMZ,gDAAAA,CAACG,gEAAG,EAACU,KAAK,CAAC,kBAAkB,EAAG,CAE7E,iEAAeT,eAAe,EAEvB,KAAMU,MAAK,aAMjB;;;;;;;;;;;;;ACvDD;AAMA,KAAMI,UAAS,CAAG,CAChB;AACA;AACA;AACAC,MAAM,CAAE,CAAEC,IAAI,CAAE,SAAU,CAAC,CAC3BC,UAAU,CAAE,CAAED,IAAI,CAAE,aAAc,CAAC,CACnCE,UAAU,CAAE,CAAEF,IAAI,CAAE,aAAc,CAAC,CACnCG,SAAS,CAAE,CAAEH,IAAI,CAAE,YAAa,CAAC,CACjCI,OAAO,CAAE,CAAEJ,IAAI,CAAE,UAAW,CAAC,CAC7BK,KAAK,CAAE,CAAEL,IAAI,CAAE,QAAS,CAC1B,CAAC,CAED,KAAMM,OAAM,CAAG,CAAC,CAAEC,YAAa,CAAC,GAAK,CACnC,KAAMC,eAAc,CAAGZ,6CAAM,CAAC,IAAI,CAAC,CACnC,KAAMa,WAAU,CAAGb,6CAAM,CAAC,IAAI,CAAC,CAC/B,KAAMc,UAAS,CAAGd,6CAAM,CAAC,EAAE,CAAC,CAE5B,KAAMe,qBAAoB,CAAG,IAAM,CACjCD,SAAS,CAACE,OAAO,CAACC,OAAO,CAACC,IAAI,EAAI,CAChCjB,sDAAI,CAACkB,GAAG,CAACD,IAAI,CAAE,CAAEE,SAAS,CAAE,CAAC,CAAEC,CAAC,CAAE,EAAG,CAAC,CAAC,CACzC,CAAC,CAAC,CACJ,CAAC,CAEDtB,gDAAS,CAAC,IAAM,CACd,KAAMuB,YAAW,CAAGV,cAAc,CAACI,OAAO,CAC1C,KAAMO,QAAO,CAAGV,UAAU,CAACG,OAAO,CAElCf,sDAAI,CAACkB,GAAG,CAACG,WAAW,CAAE,CAAEF,SAAS,CAAE,CAAC,CAAEC,CAAC,CAAE,CAAC,EAAG,CAAC,CAAC,CAC/CN,oBAAoB,EAAE,CAEtBQ,OAAO,CAACC,gBAAgB,CAAC,OAAO,CAAE,IAAM,CACtC,KAAMC,OAAM,CAAGxB,sDAAI,CAACyB,WAAW,CAACJ,WAAW,CAAE,WAAW,CAAC,GAAK,CAAC,CAC/DP,oBAAoB,EAAE,CAEtB,GAAIU,MAAM,CAAE,CACVxB,sDAAI,CAACN,EAAE,CAAC2B,WAAW,CAAE,CAAEF,SAAS,CAAE,CAAC,CAAEC,CAAC,CAAE,CAAC,EAAE,CAAEM,QAAQ,CAAE,CAAE,CAAC,CAAC,CAC7D,CAAC,IAAM,CACL1B,sDAAI,CAACN,EAAE,CAAC2B,WAAW,CAAE,CAAEF,SAAS,CAAE,CAAC,CAAEC,CAAC,CAAE,CAAC,CAAEM,QAAQ,CAAE,CAAE,CAAC,CAAC,CACzDb,SAAS,CAACE,OAAO,CAACC,OAAO,CAAC,CAACC,IAAI,CAAEU,KAAK,GAAK,CACzC3B,sDAAI,CAACN,EAAE,CAACuB,IAAI,CAAE,CACZE,SAAS,CAAE,CAAC,CACZC,CAAC,CAAE,CAAC,CACJQ,KAAK,CAAE,GAAG,CAAGD,KAAK,CAClBD,QAAQ,CAAE,CACZ,CAAC,CAAC,CACJ,CAAC,CAAC,CACJ,CACF,CAAC,CAAC,CACJ,CAAC,CAAE,EAAE,CAAC,CAEN,KAAMG,gBAAe,CAAG,IAAM,CAC5B,KAAML,OAAM,CAAGZ,UAAU,CAACG,OAAO,CAACe,SAAS,CAACC,QAAQ,CAAC,MAAM,CAAC,CAC5DnB,UAAU,CAACG,OAAO,CAACe,SAAS,CAACE,MAAM,CAAC,MAAM,CAAC,CAE3CtB,YAAY,CAAC,CAACc,MAAM,CAAC,CAErBV,oBAAoB,EAAE,CACtB,GAAIU,MAAM,CAAE,CACVxB,sDAAI,CAACN,EAAE,CAACiB,cAAc,CAACI,OAAO,CAAE,CAC9BI,SAAS,CAAE,CAAC,CACZC,CAAC,CAAE,CAAC,CACJM,QAAQ,CAAE,GAAG,CACbO,OAAO,CAAE,MACX,CAAC,CAAC,CACJ,CAAC,IAAM,CACLjC,sDAAI,CAACN,EAAE,CAACiB,cAAc,CAACI,OAAO,CAAE,CAC9BI,SAAS,CAAE,CAAC,CACZC,CAAC,CAAE,CAAC,CACJM,QAAQ,CAAE,GAAG,CACbO,OAAO,CAAE,OACX,CAAC,CAAC,CAAC;AACHpB,SAAS,CAACE,OAAO,CAACC,OAAO,CAAC,CAACC,IAAI,CAAEU,KAAK,GAAK,CACzC3B,sDAAI,CAACN,EAAE,CAACuB,IAAI,CAAE,CAAEE,SAAS,CAAE,CAAC,CAAEC,CAAC,CAAE,CAAC,CAAEQ,KAAK,CAAE,GAAG,CAAEF,QAAQ,CAAE,CAAE,CAAC,CAAC,CAChE,CAAC,CAAC,CACJ,CACF,CAAC,CAED,mBACE,wDAAK,KAAK,CAAC,MAAM,eACf,2DAAQ,SAAS,CAAC,QAAQ,eAwBxB,wDAAK,SAAS,CAAC,aAAa,eAC1B,wDAAK,GAAG,CAAC,yBAAyB,EAAG,CACjC,cACN,uDAAI,SAAS,CAAC,eAAe,eAC3B,wEACE,iDAAC,wCAAI,EAAC,IAAI,CAAC,EAAE,EAAC,QAAM,CAAO,CACxB,cACL,wEACE,iDAAC,wCAAI,EAAC,IAAI,CAAC,EAAE,EAAC,YAAU,CAAO,CAC5B,cACL,wEACE,iDAAC,wCAAI,EAAC,IAAI,CAAC,EAAE,EAAC,YAAU,CAAO,CAC5B,cACL,wEACE,iDAAC,wCAAI,EAAC,IAAI,CAAC,EAAE,EAAC,WAAS,CAAO,CAC3B,cACL,wEACE,iDAAC,wCAAI,EAAC,IAAI,CAAC,EAAE,EAAC,SAAO,CAAO,CACzB,cACL,wEACE,iDAAC,wCAAI,EAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAE,CAAEQ,UAAU,CAAE,KAAM,CAAE,EAAC,OAE5C,CAAO,CACJ,CACF,cACL,wDAAK,SAAS,CAAC,YAAY,eACzB,wDAAK,KAAK,CAAC,kBAAkB,eAC3B,2DACE,SAAS,CAAC,UAAU,CACpB,GAAG,CAAEtB,UAAW,CAChB,OAAO,CAAEiB,eAAgB,eAEzB,yDAAM,SAAS,CAAC,kBAAkB,EAAQ,CACnC,CACL,CACF,CACC,cACT,wDAAK,SAAS,CAAC,cAAc,CAAC,GAAG,CAAElB,cAAe,eAChD,2DACGwB,MAAM,CAACC,OAAO,CAACnC,SAAS,CAAC,CAACoC,GAAG,CAAC,CAAC,CAACC,IAAI,CAAEC,KAAK,CAAC,CAAEZ,KAAK,GAAK,CACvD;AACA,KAAMa,SAAQ,CAAGD,KAAK,CAACE,GAAG,GAAKC,SAAS,CACxC,KAAMvC,KAAI,CAAGoC,KAAK,CAACpC,IAAI,EAAIoC,KAAK,CAAC;AAEjC,mBACE,uDAAI,GAAG,CAAEZ,KAAM,CAAC,SAAS,CAAC,WAAW,eACnC,iDAAC,wCAAI,EAAC,EAAE,CAAExB,IAAK,CAAC,GAAG,CAAEwC,EAAE,EAAK9B,SAAS,CAACE,OAAO,CAACY,KAAK,CAAC,CAAGgB,EAAI,EACxDH,QAAQ,eACP,wDACE,GAAG,CAAED,KAAK,CAACE,GAAI,CACf,GAAG,CAAEH,IAAK,CACV,KAAK,CAAE,CAAEM,WAAW,CAAE,KAAM,CAAE,CAC9B,SAAS,CAAC,eAAe,EAE5B,CACAN,IAAI,CACA,CACJ,CAET,CAAC,CAAC,CACC,CACD,CACF,CAEV,CAAC,CAED,iEAAe7B,MAAM;;;;;;;;;;;;;AC/KrB;AACA;AACA;AACA;AACA;AACA,GAQA,KAAMxB,OAAM,CAAG,CAAC,CAAE6D,QAAS,CAAC,GAAK,2BAC/B,KAAM1D,KAAI,CAAGyD,sDAAc,cAQzB,CAEF,mBACE,+GACE,iDAAC,wDAAM,EAAC,SAAS,CAAE,wBAAAzD,IAAI,CAACG,IAAI,CAACwD,YAAY,gDAAtB,sBAAwBnD,KAAK,GAAK,OAAO,EAAG,cAC/D,wDACE,KAAK,CAAE,CACLoD,MAAM,CAAG,QAAO,CAChBC,QAAQ,CAAG,qBAAoB,CAC/BC,OAAO,CAAG,oBACZ,CAAE,eAEF,6DAAOJ,QAAQ,CAAQ,cACvB,2DACE,KAAK,CAAE,CACLK,SAAS,CAAG,gBAAe,CAC3BC,QAAQ,CAAG,gBACb,CAAE,EACH,OACG,CAAC,GAAIC,KAAI,EAAE,CAACC,WAAW,EAAE,CAAC,kBAC5B,CAAE,GAAE,cACJ,sDAAG,IAAI,CAAC,0BAA0B,EAAC,QAAM,CAAI,CACtC,CACL,CACL,CAEP,CAAC,CAED,iEAAerE,MAAM;;;;;;;;;;;;AClDrB;AACA;AACA;AACA;AACA;AACA,GAKA,QAASC,IAAG,CAAC,CAAEqE,WAAW,CAAE3D,KAAK,CAAEkD,QAAS,CAAC,CAAE,4CAC7C,KAAM,CAAEvD,IAAK,CAAC,CAAGsD,sDAAc,YAY9B,CAED,KAAMW,gBAAe,CAAGD,WAAW,EAAIhE,IAAI,CAACwD,YAAY,CAACQ,WAAW,CACpE,KAAME,aAAY,qBAAGlE,IAAI,CAACwD,YAAY,6CAAjB,mBAAmBnD,KAAK,CAE7C,mBACE,+GACE,8DAAQ6D,YAAY,CAAI,GAAE7D,KAAM,MAAK6D,YAAa,EAAC,CAAG7D,KAAK,CAAS,cACpE,yDAAM,IAAI,CAAC,aAAa,CAAC,OAAO,CAAE4D,eAAgB,EAAG,cACrD,yDAAM,QAAQ,CAAC,UAAU,CAAC,OAAO,CAAE5D,KAAM,EAAG,cAC5C,yDAAM,QAAQ,CAAC,gBAAgB,CAAC,OAAO,CAAE4D,eAAgB,EAAG,cAC5D,yDAAM,QAAQ,CAAC,SAAS,CAAC,OAAO,CAAC,SAAS,EAAG,cAC7C,yDAAM,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,SAAS,EAAG,cAC9C,yDAAM,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAE,sBAAAjE,IAAI,CAACwD,YAAY,8CAAjB,oBAAmBW,MAAM,GAAK,EAAE,EAAG,cACzE,yDAAM,IAAI,CAAC,eAAe,CAAC,OAAO,CAAE9D,KAAM,EAAG,cAC7C,yDAAM,IAAI,CAAC,qBAAqB,CAAC,OAAO,CAAE4D,eAAgB,EAAG,CAC5DV,QAAQ,CACR,CAEP,CAEA,iEAAe5D,GAAG","sources":["webpack://gatsby-starter-default/./src/pages/using-typescript.tsx","webpack://gatsby-starter-default/./src/components/header.js","webpack://gatsby-starter-default/./src/components/layout.js","webpack://gatsby-starter-default/./src/components/seo.js"],"sourcesContent":["// If you don't want to use TypeScript you can delete this file!\r\nimport * as React from \"react\"\r\nimport { PageProps, Link, graphql, HeadFC } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\n\r\ntype DataProps = {\r\n  site: {\r\n    buildTime: string\r\n  }\r\n}\r\n\r\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({\r\n  data,\r\n  location,\r\n}) => (\r\n  <Layout>\r\n    <h1>\r\n      Gatsby supports <b>TypeScript by default</b>\r\n    </h1>\r\n    <p>\r\n      This means that you can create and write <code>.ts/.tsx</code> files for\r\n      your pages, components, and <code>gatsby-*</code> configuration files (for\r\n      example <code>gatsby-config.ts</code>).\r\n    </p>\r\n    <p>\r\n      For type checking you'll want to install <code>typescript</code> via npm\r\n      and run <code>tsc --init</code> to create a <code>tsconfig</code> file.\r\n    </p>\r\n    <p>\r\n      You're currently on the page <code>{location.pathname}</code> which was\r\n      built on {data.site.buildTime}.\r\n    </p>\r\n    <p>\r\n      To learn more, head over to our{\" \"}\r\n      <a href=\"https://www.gatsbyjs.com/docs/how-to/custom-configuration/typescript/\">\r\n        documentation about TypeScript\r\n      </a>\r\n      .\r\n    </p>\r\n    <Link to=\"/\">Go back to the homepage</Link>\r\n  </Layout>\r\n)\r\n\r\nexport const Head: HeadFC<DataProps> = () => <Seo title=\"Using TypeScript\" />\r\n\r\nexport default UsingTypescript\r\n\r\nexport const query = graphql`\r\n  {\r\n    site {\r\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\r\n    }\r\n  }\r\n`\r\n","// src/components/Header.js\r\nimport React, { useEffect, useRef } from \"react\"\r\nimport gsap from \"gsap\"\r\nimport { Link } from \"gatsby\"\r\nimport \"../styles/style.scss\"\r\n\r\nconst linkPaths = {\r\n  // Elewacje: { path: \"/elewacje\", img: \"/icons/house.png\" },\r\n  // Dach: { path: \"/dach\", img: \"/icons/dach.png\" },\r\n  // Ogrodzenia: { path: \"/ogrodzenia\", img: \"/icons/fences.png\" },\r\n  Oferta: { path: \"/oferta\" },\r\n  Realizacje: { path: \"/realizacje\" },\r\n  Producenci: { path: \"/producenci\" },\r\n  Partnerzy: { path: \"/partnerzy\" },\r\n  Kontakt: { path: \"/kontakt\" },\r\n  SKLEP: { path: \"/sklep\" },\r\n}\r\n\r\nconst Header = ({ onMenuToggle }) => {\r\n  const linksMobileRef = useRef(null)\r\n  const menuBtnRef = useRef(null)\r\n  const linksRefs = useRef([])\r\n\r\n  const setLinksInitialState = () => {\r\n    linksRefs.current.forEach(link => {\r\n      gsap.set(link, { autoAlpha: 0, y: 30 })\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    const linksMobile = linksMobileRef.current\r\n    const menuBtn = menuBtnRef.current\r\n\r\n    gsap.set(linksMobile, { autoAlpha: 0, y: -50 })\r\n    setLinksInitialState()\r\n\r\n    menuBtn.addEventListener(\"click\", () => {\r\n      const isOpen = gsap.getProperty(linksMobile, \"autoAlpha\") === 1\r\n      setLinksInitialState()\r\n\r\n      if (isOpen) {\r\n        gsap.to(linksMobile, { autoAlpha: 0, y: -50, duration: 1 })\r\n      } else {\r\n        gsap.to(linksMobile, { autoAlpha: 1, y: 0, duration: 1 })\r\n        linksRefs.current.forEach((link, index) => {\r\n          gsap.to(link, {\r\n            autoAlpha: 1,\r\n            y: 0,\r\n            delay: 0.1 * index,\r\n            duration: 1,\r\n          })\r\n        })\r\n      }\r\n    })\r\n  }, [])\r\n\r\n  const handleMenuClick = () => {\r\n    const isOpen = menuBtnRef.current.classList.contains(\"open\")\r\n    menuBtnRef.current.classList.toggle(\"open\")\r\n\r\n    onMenuToggle(!isOpen)\r\n\r\n    setLinksInitialState()\r\n    if (isOpen) {\r\n      gsap.to(linksMobileRef.current, {\r\n        autoAlpha: 0,\r\n        y: 0,\r\n        duration: 1.2,\r\n        display: \"none\",\r\n      })\r\n    } else {\r\n      gsap.to(linksMobileRef.current, {\r\n        autoAlpha: 1,\r\n        y: 0,\r\n        duration: 1.2,\r\n        display: \"block\",\r\n      }) // Możesz zmienić 'block' na 'flex' w zależności od układu\r\n      linksRefs.current.forEach((link, index) => {\r\n        gsap.to(link, { autoAlpha: 1, y: 0, delay: 0.5, duration: 1 })\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div class=\"home\">\r\n      <header className=\"header\">\r\n        {/* Twój kod HTML tutaj */}\r\n        {/* <div className=\"before-logo\">\r\n          <ul className=\"ul-before-logo\">\r\n            <li>\r\n              <Link href=\"\">\r\n                <img src=\"/icons/house.png\" alt=\"Background\" />\r\n                Elewacje\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link href=\"\">\r\n                <img src=\"/icons/dach.png\" alt=\"Background\" />\r\n                Dach\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link href=\"\">\r\n                <img src=\"/icons/fences.png\" alt=\"Background\" />\r\n                Ogrodzenia\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div> */}\r\n        <div className=\"header-logo\">\r\n          <img src=\"/icons/CERAMIKAlogo.png\" />\r\n        </div>\r\n        <ul className=\"desktop-links\">\r\n          <li>\r\n            <Link href=\"\">Oferta</Link>\r\n          </li>\r\n          <li>\r\n            <Link href=\"\">Realizacje</Link>\r\n          </li>\r\n          <li>\r\n            <Link href=\"\">Producenci</Link>\r\n          </li>\r\n          <li>\r\n            <Link href=\"\">Partnerzy</Link>\r\n          </li>\r\n          <li>\r\n            <Link href=\"\">Kontakt</Link>\r\n          </li>\r\n          <li>\r\n            <Link href=\"\" style={{ fontWeight: \"700\" }}>\r\n              SKLEP\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n        <div className=\"header-nav\">\r\n          <div class=\"header-nav__btns\">\r\n            <button\r\n              className=\"menu-btn\"\r\n              ref={menuBtnRef}\r\n              onClick={handleMenuClick}\r\n            >\r\n              <span className=\"menu-btn__burger\"></span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </header>\r\n      <nav className=\"links-mobile\" ref={linksMobileRef}>\r\n        <ul>\r\n          {Object.entries(linkPaths).map(([item, value], index) => {\r\n            // Rozpoznaj, czy link zawiera obraz\r\n            const hasImage = value.img !== undefined\r\n            const path = value.path || value // Obsługuje zarówno nową strukturę z obrazem, jak i samą ścieżkę\r\n\r\n            return (\r\n              <li key={index} className=\"mob-links\">\r\n                <Link to={path} ref={el => (linksRefs.current[index] = el)}>\r\n                  {hasImage && (\r\n                    <img\r\n                      src={value.img}\r\n                      alt={item}\r\n                      style={{ marginRight: \"8px\" }}\r\n                      className=\"img-3-nav-mob\"\r\n                    />\r\n                  )}\r\n                  {item}\r\n                </Link>\r\n              </li>\r\n            )\r\n          })}\r\n        </ul>\r\n      </nav>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","/**\r\n * Layout component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nimport Header from \"./header\"\r\nimport \"./layout.css\"\r\n\r\nconst Layout = ({ children }) => {\r\n  const data = useStaticQuery(graphql`\r\n    query SiteTitleQuery {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  return (\r\n    <>\r\n      <Header siteTitle={data.site.siteMetadata?.title || `Title`} />\r\n      <div\r\n        style={{\r\n          margin: `0 auto`,\r\n          maxWidth: `var(--size-content)`,\r\n          padding: `var(--size-gutter)`,\r\n        }}\r\n      >\r\n        <main>{children}</main>\r\n        <footer\r\n          style={{\r\n            marginTop: `var(--space-5)`,\r\n            fontSize: `var(--font-sm)`,\r\n          }}\r\n        >\r\n          © {new Date().getFullYear()} &middot; Built with\r\n          {` `}\r\n          <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\r\n        </footer>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Layout\r\n","/**\r\n * SEO component that queries for data with\r\n * Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction Seo({ description, title, children }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n  const defaultTitle = site.siteMetadata?.title\r\n\r\n  return (\r\n    <>\r\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\r\n      <meta name=\"description\" content={metaDescription} />\r\n      <meta property=\"og:title\" content={title} />\r\n      <meta property=\"og:description\" content={metaDescription} />\r\n      <meta property=\"og:type\" content=\"website\" />\r\n      <meta name=\"twitter:card\" content=\"summary\" />\r\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\r\n      <meta name=\"twitter:title\" content={title} />\r\n      <meta name=\"twitter:description\" content={metaDescription} />\r\n      {children}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Seo\r\n"],"names":["React","Link","Layout","Seo","UsingTypescript","data","location","pathname","site","buildTime","href","to","Head","title","query","useEffect","useRef","gsap","linkPaths","Oferta","path","Realizacje","Producenci","Partnerzy","Kontakt","SKLEP","Header","onMenuToggle","linksMobileRef","menuBtnRef","linksRefs","setLinksInitialState","current","forEach","link","set","autoAlpha","y","linksMobile","menuBtn","addEventListener","isOpen","getProperty","duration","index","delay","handleMenuClick","classList","contains","toggle","display","fontWeight","Object","entries","map","item","value","hasImage","img","undefined","el","marginRight","useStaticQuery","children","siteMetadata","margin","maxWidth","padding","marginTop","fontSize","Date","getFullYear","description","metaDescription","defaultTitle","author"],"sourceRoot":""}